<!-- Plugin Configuration File. Read more: https://plugins.jetbrains.com/docs/intellij/plugin-configuration-file.html -->
<idea-plugin>
  <!-- Unique identifier of the plugin. It should be FQN. It cannot be changed between the plugin versions. -->
  <id>org.moqui.idea.plugin</id>

  <!-- Public plugin name should be written in Title Case.
       Guidelines: https://plugins.jetbrains.com/docs/marketplace/plugin-overview-page.html#plugin-name -->
  <name>Moqui Dev Tools</name>

  <!-- A displayed Vendor name or Organization ID displayed on the Plugins Page. -->
  <vendor email="support@beiyelin.com" url="https://www.beiyelin.com">Beiyelin</vendor>

  <!-- Description of the plugin displayed on the Plugin Page and IDE Plugin Manager.
       Simple HTML elements (text formatting, paragraphs, and lists) can be added inside of <![CDATA[ ]]> tag.
       Guidelines: https://plugins.jetbrains.com/docs/marketplace/plugin-overview-page.html#plugin-description -->
  <description><![CDATA[
    Moqui Development Plugin<br>
    For Moqui version 3.0.0.RC1<br>
    <em>Support following function:</em>
    <ol>
        <li>Auto Complete </li>
        <li>Rename </li>
        <li>Ctrl+B (Ctrl+click) </li>
        <li>Inspection</li>
        <li>Quick documentation for entity and service</li>
        <li>Inject Groovy to script tag and some attribute</li>
        <li>Show usages of Entity,Service,Transition</li>
    </ol>
  ]]></description>

  <!-- Product and plugin compatibility requirements.
       Read more: https://plugins.jetbrains.com/docs/intellij/plugin-compatibility.html -->
    <depends>com.intellij.modules.platform</depends>
<!--    <depends>com.intellij.modules.xml</depends>-->
    <depends>com.intellij.java</depends>
    <depends>org.intellij.groovy</depends>
    <depends>org.intellij.intelliLang</depends>
<!--    <depends config-file="moqui-xml-injections.xml">org.intellij.intelliLang</depends>-->

  <!-- Extension points defined by the plugin.
       Read more: https://plugins.jetbrains.com/docs/intellij/plugin-extension-points.html -->
  <extensions defaultExtensionNs="com.intellij">
      <!--文件描述-->
      <!-- mapper.xml文件属性提示 -->

      <dom.fileMetaData id="myPlugin.EntitiesDescription"
                        rootTagName="entities"
                        implementation="org.moqui.idea.plugin.dom.description.EntitiesDescription"/>
      <dom.fileMetaData id="myPlugin.ServicesDescription"
                        rootTagName="services"
                        implementation="org.moqui.idea.plugin.dom.description.ServicesDescription"/>
      <dom.fileMetaData id="myPlugin.SecasDescription"
                        rootTagName="secas"
                        implementation="org.moqui.idea.plugin.dom.description.SecasDescription"/>
      <dom.fileMetaData id="myPlugin.EecasDescription"
                        rootTagName="eecas"
                        implementation="org.moqui.idea.plugin.dom.description.EecasDescription"/>

      <dom.fileMetaData id="myPlugin.ScreenDescription"
                        rootTagName="screen"
                        implementation="org.moqui.idea.plugin.dom.description.ScreenDescription"/>
      <dom.fileMetaData id="myPlugin.MoquiConfDescription"
                        rootTagName="moqui-conf"
                        implementation="org.moqui.idea.plugin.dom.description.MoquiConfDescription"/>
      <dom.fileMetaData id="myPlugin.RestApiDescription"
                        rootTagName="resource"
                        implementation="org.moqui.idea.plugin.dom.description.RestApiDescription"/>
      <dom.fileMetaData id="myPlugin.EmecasDescription"
                        rootTagName="emecas"
                        implementation="org.moqui.idea.plugin.dom.description.EmecasDescription"/>
      <dom.fileMetaData id="myPlugin.ComponentDescription"
                        rootTagName="component"
                        implementation="org.moqui.idea.plugin.dom.description.ComponentDescription"/>
      <dom.fileMetaData id="myPlugin.WidgetTemplatesDescription"
                        rootTagName="widget-templates"
                        implementation="org.moqui.idea.plugin.dom.description.WidgetTemplatesDescription"/>

      //2022-2024不同版本之间的API变化很大，同时用处也不低，暂时不起用
<!--      <platform.backend.documentation.psiTargetProvider id="MoquiPsiDocumentationTargetProvider"-->
<!--                                                        implementation="org.moqui.idea.plugin.quickDoc.MoquiPsiDocumentationTargetProvider"/>-->
    <lang.documentationProvider language="XML" implementationClass="org.moqui.idea.plugin.quickDoc.QuickDocumentationProvider"/>
    <lang.documentationProvider language="Groovy" implementationClass="org.moqui.idea.plugin.quickDoc.QuickDocumentationProvider"/>

      <lang.foldingBuilder language="XML"
                           implementationClass="org.moqui.idea.plugin.foldingBuilder.MoquiFoldingBuilder"/>

      //很有意思的功能，后续再进一步研究
<!--      <fileEditorProvider id="myPlugin.ScreenEditor" implementation="org.moqui.idea.plugin.editor.ScreenEditorProvider"></fileEditorProvider>-->


      <codeInsight.lineMarkerProvider id="myPlugin.XmlFileLineMarkerProvider" language="XML"
                                      implementationClass="org.moqui.idea.plugin.provider.FormFoldingLineMarkerProvider"/>

      <annotator language="Groovy" implementationClass="org.moqui.idea.plugin.annotator.GroovyAnnotator"/>
      <annotator language="XML" implementationClass="org.moqui.idea.plugin.annotator.MoquiDomAnnotator"/>

<!--  TODO:??? -->
<!--      <definitionsScopedSearch id="myPlugin.EntitySearch"-->
<!--                               implementation="org.moqui.idea.plugin.search.EntitySearch"/>-->

<!--没有什么用，还不清楚具体原因-->
<!--      <refactoring.elementListenerProvider implementation="org.moqui.idea.plugin.refactoring.EntityNameUpdatedRefactoringProvider"-->
<!--                                           id="myPlugin.EntityNameUpdatedRefactoring"/>-->
<!--      <gotoTargetRendererProvider implementation="provider.org.moqui.idea.plugin.GotoMapperXmlSchemaTypeRendererProvider" order="first"/>-->



    <typedHandler implementation="org.moqui.idea.plugin.typedHandler.ServiceCallTypedHandler" id="myPlugin.ServiceCallTypedHandler"/>
    <enterHandlerDelegate implementation="org.moqui.idea.plugin.typedHandler.MoquiEnterTypedHandler"/>

<!--      转跳 ctrl+click，ctrl+b-->
<!--      <psi.referenceContributor id="myPlugin.EntityReferenceContributor" language="XML" order="first"-->
<!--                                implementation="org.moqui.idea.plugin.reference.EntityReferenceContributor"/>-->
<!--      <psi.referenceContributor id="myPlugin.ServiceReferenceContributor" language="XML" order="first"-->
<!--                                implementation="org.moqui.idea.plugin.reference.ServiceReferenceContributor"/>-->
<!--      <psi.referenceContributor id="myPlugin.LocationReferenceContributor" language="XML" order="first"-->
<!--                                implementation="org.moqui.idea.plugin.reference.LocationReferenceContributor"/>-->



      <notificationGroup id="Custom Notification Group" displayType="BALLOON" bundle="messages.MoquiDomBundle" key="notification.group.name"/>

<!--      <applicationService serviceInterface="org.moqui.idea.plugin.service.MyDomService"-->
<!--                          serviceImplementation="org.moqui.idea.plugin.service.impl.MyDomServiceImpl"/>-->
<!--      <completion.contributor language="XML"-->
<!--                              implementationClass="org.moqui.idea.plugin.contributor.EntityNameAndServiceCallNameCompletionContributor"/>-->

      <completion.contributor language="XML"
                                    implementationClass="org.moqui.idea.plugin.contributor.MultiFieldNameCompletionContributor"/>

      <completion.contributor language="XML" order="first"
                              implementationClass="org.moqui.idea.plugin.contributor.TransitionCompletionContributor"/>
      <completion.contributor language="XML" order="first"
                              implementationClass="org.moqui.idea.plugin.contributor.SubScreensDefaultItemCompletionContributor"/>
<!--      <lookup.charFilter implementation="org.moqui.idea.plugin.contributor.MultiFieldCompletionCharFilter"-->
<!--                         order="first" id="multiFieldCompletionCharFilter"/>-->
      <psi.referenceContributor language="Groovy" implementation="org.moqui.idea.plugin.contributor.GroovyCodeReferenceContributor"/>


<!--      <completion.contributor order="first" language="JAVA" implementationClass="org.moqui.idea.plugin.completion.contributor.JavaCompletionContributor"/>-->

      <renameHandler implementation="org.moqui.idea.plugin.refactoring.MoquiDomAttributeRenameHandler" order="first"/>

<!--      静态检查-->
<!--      <localInspection language="XML" shortName="EecasFilesInspection"-->
<!--                       id="myPlugin.EecasFileInspection"-->
<!--                       displayName="Eecas files inspection"-->
<!--                       groupName="MoquiIdeaPlugin" enabledByDefault="true" level="ERROR"-->
<!--                       hasStaticDescription="true"-->
<!--                       implementationClass="org.moqui.idea.plugin.inspection.EecasFilesInspection"/>-->
<!--      <localInspection language="XML" shortName="EntityFilesInspection"-->
<!--                       id="myPlugin.EntityFilesInspection"-->
<!--                       displayName="Entity files inspection"-->
<!--                       groupName="MoquiIdeaPlugin" enabledByDefault="true" level="ERROR"-->
<!--                       hasStaticDescription="true"-->
<!--                       implementationClass="org.moqui.idea.plugin.inspection.EntitiesFilesInspection"/>-->
<!--      <localInspection language="XML" shortName="SecasFilesInspection"-->
<!--                       id="myPlugin.SecasFilesInspection"-->
<!--                       displayName="Secas files inspection"-->
<!--                       groupName="MoquiIdeaPlugin" enabledByDefault="true" level="ERROR"-->
<!--                       hasStaticDescription="true"-->
<!--                       implementationClass="org.moqui.idea.plugin.inspection.SecasFilesInspection"/>-->
<!--      <localInspection language="XML" shortName="ServicesFilesInspection"-->
<!--                       id="myPlugin.ServicesFilesInspection"-->
<!--                       displayName="Services files inspection"-->
<!--                       groupName="MoquiIdeaPlugin" enabledByDefault="true" level="ERROR"-->
<!--                       hasStaticDescription="true"-->
<!--                       implementationClass="org.moqui.idea.plugin.inspection.ServicesFilesInspection"/>-->
<!--      <localInspection language="XML" shortName="ScreenFilesInspection"-->
<!--                       id="myPlugin.ScreenFilesInspection"-->
<!--                       displayName="Screen files inspection"-->
<!--                       groupName="MoquiIdeaPlugin" enabledByDefault="true" level="ERROR"-->
<!--                       hasStaticDescription="true"-->
<!--                       implementationClass="org.moqui.idea.plugin.inspection.ScreenFilesInspection"/>-->
<!--      <localInspection language="XML" shortName="EntitiesDomInspection" bundle="messages.MoquiDomBundle" key="inspection.entities"-->
<!--                       groupKey="inspection.group"-->
<!--                       enabledByDefault="true" level="ERROR"-->
<!--                       implementationClass="org.moqui.idea.plugin.dom.inspection.EntitiesDomInspection"/>-->
      //这里的shortName需要和 MoquiDomCheckResoleInspection的getShortName返回值保持一致，否则报warning
<!--      <localInspection language="XML" shortName="MoquiDomCheckResoleInspection" bundle="messages.MoquiDomBundle" key="inspection.MoquiDomCheckResole"-->
<!--                             groupKey="inspection.group"-->
<!--                             enabledByDefault="true" level="ERROR"-->
<!--                             implementationClass="org.moqui.idea.plugin.dom.inspection.MoquiDomCheckResoleInspection"/>-->

      <standardResourceProvider implementation="org.moqui.idea.plugin.dom.xsd.MoquiXsdProvider"/>

      <toolWindow factoryClass="org.moqui.idea.plugin.action.AdminToolWindowFactory"
                  id="Moqui Admin"
                  anchor="right"
                  icon="MoquiIcons.ToolWindow"

      />
<!--      <toolWindow factoryClass="org.moqui.idea.plugin.action.WebToolWindowFactory"-->
<!--                  id="Moqui Web"-->
<!--                  anchor="right"-->
<!--                  icon="AllIcons.Toolwindows.Documentation"-->

<!--      />-->
      <multiHostInjector implementation="org.moqui.idea.plugin.injector.MoquiGroovyToXmlInjector"/>

      <!-- 注册自定义项目视图 -->
      <projectViewPane
              id="MoquiEntityProjectView"
              implementation="org.moqui.idea.plugin.projectViewPane.MoquiEntityViewPane"
      />
      <projectViewPane
              id="MoquiServiceProjectView"
              implementation="org.moqui.idea.plugin.projectViewPane.MoquiServiceViewPane"
      />
      <projectViewPane
              id="MoquiScreenProjectView"
              implementation="org.moqui.idea.plugin.projectViewPane.MoquiScreenViewPane"
      />
      <projectViewPane
              id="MoquiSrcProjectView"
              implementation="org.moqui.idea.plugin.projectViewPane.MoquiSrcViewPane"
      />
<!--      再进一步优化-->
<!--      <codeInsight.declarativeInlayProvider-->
<!--              language="XML"-->
<!--              implementationClass="org.moqui.idea.plugin.provider.ServiceInlayHintsProvider"-->
<!--              isEnabledByDefault="true"-->
<!--              group="VALUES_GROUP"-->
<!--              providerId="xml.moqui.service"-->
<!--              bundle="messages.MoquiDomBundle"-->
<!--              nameKey="xml.inlay.hints.service.provider.name"-->
<!--              descriptionKey="xml.inlay.hints.service.provider.description"/>-->
      <codeInsight.daemonBoundCodeVisionProvider implementation="org.moqui.idea.plugin.provider.MoquiUsagesInlayHintsProvider"/>

  </extensions>
  <actions>
      <group id="MoquiIdeaPlugin" text="Moqui Support Tools" popup="true">
          <add-to-group group-id="ToolsMenu" anchor="first"/>
      </group>

<!--    <group id="IDEAPluginTools" text="IDEA增强插件" popup="true">-->
<!--      <add-to-group group-id="EditorPopupMenu" anchor="first"/>-->
<!--      <add-to-group group-id="ProjectViewPopupMenu" anchor="first"/>-->
<!--    </group>-->
    <action id="org.moqui.idea.plugin.MyPluginClass" class="org.moqui.idea.plugin.MyPluginClass" text="MyPluginName"
            description="MyPlugin description">
        <add-to-group group-id="MoquiIdeaPlugin" anchor="last"/>
<!--      <add-to-group group-id="IDEAPluginTools" anchor="last"/>-->
<!--      <add-to-group group-id="HelpMenu" anchor="after" relative-to-action="About"/>-->
<!--      <add-to-group group-id="MainMenu" relative-to-action="ToolsMenu" anchor="after"/>-->

    </action>
    <action id="ShowMoquiActionFlowDiagram" class="org.moqui.idea.plugin.action.flowManagement.ShowFlowAnAction" text="Show Flow Diagram"
            description="Show action flow diagram">
        <add-to-group group-id="EditorPopupMenu" anchor="first"/>
    </action>

<!--      <action id="ReplaceText" class="org.moqui.idea.plugin.ReplaceText" text="MyReplaceTextPlugin"-->
<!--              description="My ReplaceText Plugin">-->
<!--          <add-to-group group-id="EditorPopupMenu" anchor="first"/>-->
<!--      </action>-->

  </actions>

<!--    暂时没有什么用-->
<!--    <projectListeners>-->
<!--        <listener-->
<!--                class="org.moqui.idea.plugin.listener.FileListener"-->
<!--                topic="com.intellij.openapi.vfs.newvfs.BulkFileListener"/>-->
<!--    </projectListeners>-->

        <projectListeners>
            <listener
                    class="org.moqui.idea.plugin.listener.MoquiProjectCloseListener"
                    topic="com.intellij.openapi.project.ProjectManagerListener"/>
        </projectListeners>

</idea-plugin>